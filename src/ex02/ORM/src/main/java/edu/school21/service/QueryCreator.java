package edu.school21.service;

import edu.school21.annotations.OrmColumn;
import edu.school21.annotations.OrmColumnId;
import edu.school21.annotations.OrmEntity;

import java.lang.reflect.Field;

public class QueryCreator {

    public static String createTableQuery(Class<?> clazz){
        OrmEntity ormEntity = clazz.getAnnotation(OrmEntity.class);
        StringBuilder query = new StringBuilder("CREATE TABLE IF NOT EXISTS " + ormEntity.table() + " (");
        for (Field field : clazz.getDeclaredFields()) {
            if (field.isAnnotationPresent(OrmColumn.class)) {
                OrmColumn ormColumn = field.getAnnotation(OrmColumn.class);
                String columnName = ormColumn.name();
                String fieldType = getSqlType(field.getType().getSimpleName());
                System.out.println("columnName = " + columnName);
                System.out.println("fieldType = " + fieldType);
                query.append(columnName).append(" ").append(fieldType).append(", ");
            }
            if (field.isAnnotationPresent(OrmColumnId.class)) {
                query.append("id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY, ");
            }
        }
        query.delete(query.length() - 2, query.length());
        query.append(")");
        return query.toString();
    }
    public static String dropTableQuery(Class<?> clazz){
            OrmEntity ormEntity = clazz.getAnnotation(OrmEntity.class);
       return  "DROP TABLE IF EXISTS " + ormEntity.table();
    }

    private static String getSqlType(String type) {
        switch (type) {
            case "String":
                return "VARCHAR(100) NOT NULL";
            case "Integer":
                return "INTEGER";
            default:
                return "";
        }
    }

}
